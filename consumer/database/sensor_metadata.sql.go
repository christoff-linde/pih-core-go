// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: sensor_metadata.sql

package db

import (
	"context"

	"github.com/jackc/pgx/v5/pgtype"
)

const createSensorMetadata = `-- name: CreateSensorMetadata :one
INSERT INTO sensor_metadata ( id, sensor_id, manufacturer, model_number, installation_time, updated_at, additional_data )
VALUES ($1, $2, $3, $4, $5, $6, $7)
RETURNING id, sensor_id, manufacturer, model_number, installation_time, updated_at, additional_data
`

type CreateSensorMetadataParams struct {
	ID               int32              `json:"id"`
	SensorID         int32              `json:"sensor_id"`
	Manufacturer     pgtype.Text        `json:"manufacturer"`
	ModelNumber      pgtype.Text        `json:"model_number"`
	InstallationTime pgtype.Timestamptz `json:"installation_time"`
	UpdatedAt        pgtype.Timestamptz `json:"updated_at"`
	AdditionalData   []byte             `json:"additional_data"`
}

func (q *Queries) CreateSensorMetadata(ctx context.Context, arg CreateSensorMetadataParams) (SensorMetadatum, error) {
	row := q.db.QueryRow(ctx, createSensorMetadata,
		arg.ID,
		arg.SensorID,
		arg.Manufacturer,
		arg.ModelNumber,
		arg.InstallationTime,
		arg.UpdatedAt,
		arg.AdditionalData,
	)
	var i SensorMetadatum
	err := row.Scan(
		&i.ID,
		&i.SensorID,
		&i.Manufacturer,
		&i.ModelNumber,
		&i.InstallationTime,
		&i.UpdatedAt,
		&i.AdditionalData,
	)
	return i, err
}
