// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: sensor_readings.sql

package db

import (
	"context"

	"github.com/jackc/pgx/v5/pgtype"
)

const createSensorReading = `-- name: CreateSensorReading :one
INSERT INTO sensor_readings (sensor_id, temperature, humidity, pressure)
VALUES ($1, $2, $3, $4 )
RETURNING reading_timestamp, sensor_id, temperature, humidity, pressure
`

type CreateSensorReadingParams struct {
	SensorID    pgtype.Int4   `json:"sensor_id"`
	Temperature pgtype.Float8 `json:"temperature"`
	Humidity    pgtype.Float8 `json:"humidity"`
	Pressure    pgtype.Float8 `json:"pressure"`
}

func (q *Queries) CreateSensorReading(ctx context.Context, arg CreateSensorReadingParams) (SensorReading, error) {
	row := q.db.QueryRow(ctx, createSensorReading,
		arg.SensorID,
		arg.Temperature,
		arg.Humidity,
		arg.Pressure,
	)
	var i SensorReading
	err := row.Scan(
		&i.ReadingTimestamp,
		&i.SensorID,
		&i.Temperature,
		&i.Humidity,
		&i.Pressure,
	)
	return i, err
}
