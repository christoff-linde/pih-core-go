// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0

package db

import (
	"github.com/jackc/pgx/v5/pgtype"
)

type Sensor struct {
	ID         int32              `db:"id" json:"id"`
	SensorName string             `db:"sensor_name" json:"sensor_name"`
	CreatedAt  pgtype.Timestamptz `db:"created_at" json:"created_at"`
	UpdatedAt  pgtype.Timestamptz `db:"updated_at" json:"updated_at"`
}

type SensorMetadatum struct {
	ID               int32              `db:"id" json:"id"`
	SensorType       pgtype.Text        `db:"sensor_type" json:"sensor_type"`
	Manufacturer     pgtype.Text        `db:"manufacturer" json:"manufacturer"`
	ModelNumber      pgtype.Text        `db:"model_number" json:"model_number"`
	SensorLocation   pgtype.Text        `db:"sensor_location" json:"sensor_location"`
	InstallationTime pgtype.Timestamptz `db:"installation_time" json:"installation_time"`
	UpdatedAt        pgtype.Timestamptz `db:"updated_at" json:"updated_at"`
	AdditionalData   []byte             `db:"additional_data" json:"additional_data"`
	SensorID         int32              `db:"sensor_id" json:"sensor_id"`
}

type SensorReading struct {
	ReadingTimestamp pgtype.Timestamptz `db:"reading_timestamp" json:"reading_timestamp"`
	SensorID         pgtype.Int4        `db:"sensor_id" json:"sensor_id"`
	Temperature      pgtype.Float8      `db:"temperature" json:"temperature"`
	Humidity         pgtype.Float8      `db:"humidity" json:"humidity"`
	Pressure         pgtype.Float8      `db:"pressure" json:"pressure"`
}

type SensorReadingsDaily struct {
	Day            interface{} `db:"day" json:"day"`
	SensorID       pgtype.Int4 `db:"sensor_id" json:"sensor_id"`
	MinTemperature interface{} `db:"min_temperature" json:"min_temperature"`
	AvgTemperature float64     `db:"avg_temperature" json:"avg_temperature"`
	MaxTemperature interface{} `db:"max_temperature" json:"max_temperature"`
	MinHumidity    interface{} `db:"min_humidity" json:"min_humidity"`
	AvgHumidity    float64     `db:"avg_humidity" json:"avg_humidity"`
	MaxHumidity    interface{} `db:"max_humidity" json:"max_humidity"`
}

type SensorReadingsHourly struct {
	Hour           interface{} `db:"hour" json:"hour"`
	SensorID       pgtype.Int4 `db:"sensor_id" json:"sensor_id"`
	MinTemperature interface{} `db:"min_temperature" json:"min_temperature"`
	AvgTemperature float64     `db:"avg_temperature" json:"avg_temperature"`
	MaxTemperature interface{} `db:"max_temperature" json:"max_temperature"`
	MinHumidity    interface{} `db:"min_humidity" json:"min_humidity"`
	AvgHumidity    float64     `db:"avg_humidity" json:"avg_humidity"`
	MaxHumidity    interface{} `db:"max_humidity" json:"max_humidity"`
}

type SensorReadingsMinute struct {
	Minute         interface{} `db:"minute" json:"minute"`
	SensorID       pgtype.Int4 `db:"sensor_id" json:"sensor_id"`
	MinTemperature interface{} `db:"min_temperature" json:"min_temperature"`
	AvgTemperature float64     `db:"avg_temperature" json:"avg_temperature"`
	MaxTemperature interface{} `db:"max_temperature" json:"max_temperature"`
	MinHumidity    interface{} `db:"min_humidity" json:"min_humidity"`
	AvgHumidity    float64     `db:"avg_humidity" json:"avg_humidity"`
	MaxHumidity    interface{} `db:"max_humidity" json:"max_humidity"`
}
